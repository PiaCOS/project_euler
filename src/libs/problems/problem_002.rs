// <p>Each new term in the Fibonacci sequence is generated by adding the 
// previous two terms. By starting with $1$ and $2$, the first $10$ terms 
// will be:
// $$1, 2, 3, 5, 8, 13, 21, 34, 55, 89, \dots$$</p>
// <p>By considering the terms in the Fibonacci sequence whose values 
// do not exceed four million, find the sum of the even-valued terms.</p>

fn _compute_fibonacci_until_n(n: u32) -> u32 {
    let mut v = vec![1, 2];
    let mut count = 1;

    let mut r = 3;
    let mut sum_even = 2;

    while r < n {
        v.push(r);
        count+=1;
        if r % 2 == 0 {sum_even+=r};

        r = v[count-1] + v[count];
    }
    sum_even
}

#[allow(dead_code)]
pub fn answer() -> u32 {
    let n = 4_000_000;
    _compute_fibonacci_until_n(n)
}